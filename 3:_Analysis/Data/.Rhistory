# ---------------------------------------------------------------------------- #
library(tidyverse)  # Essentials
library(readxl)     # For reading Excel files
library(openxlsx)   # For exporting Excel files
library(haven)      # For Stata files
library(sf)         # For spatial data
library(scales)
# ---------------------------------------------------------------------------- #
# Data Import: Spatial Data
# ---------------------------------------------------------------------------- #
zip_file_path <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Municipios.zip"
extraction_directory <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Extracted"
# Corrected argument name
unzip(zip_file_path, exdir = extraction_directory)
# Adjust the path to where you've extracted the .shp file
shapefile_path <- paste0(extraction_directory, "/Servicios_P%C3%BAblicos_-_Municipios.shp")
# Read the shapefile
mun <- st_read(shapefile_path)
mun <- mun %>%
mutate(
# Ensure the department code is treated as a two-digit string
DPTO_CCDGO = sprintf("%02d", as.numeric(DPTO_CCDGO)),
# Ensure the municipality code is treated as a three-digit string
MPIO_CCDGO = sprintf("%03d", as.numeric(MPIO_CCDGO)),
# Concatenate the formatted strings to create the new ID
id = paste0(DPTO_CCDGO, MPIO_CCDGO)
)
# ---------------------------------------------------------------------------- #
# Data Import: Stata Data
# ---------------------------------------------------------------------------- #
df <- read_dta("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/2:_ProcessedData/MergedData/Final/Panel_v3.dta")
df <- df %>%
mutate(
id = sprintf("%05d", as.numeric(id))
)
# Aggregating data at the department level (if necessary)
df_summary <- df %>%
group_by(dep, periodo) %>%
summarise(
total_violence = sum(Violencia, na.rm = TRUE),
violence_guerrilla = sum(Violencia_Guerrilla, na.rm = TRUE),
violence_para = sum(Violencia_para, na.rm = TRUE),
violence_estado = sum(Violencia_Estado, na.rm = TRUE),
.groups = 'drop'
)
# Aggregating data at the department level (if necessary)
df_summary <- df %>%
group_by(dep, periodo) %>%
summarise(
total_violence = sum(Violencia, na.rm = TRUE),
violence_guerrilla = sum(V_Guerrilla, na.rm = TRUE),
violence_para = sum(V_Estado, na.rm = TRUE),
violence_estado = sum(V_Paramilitar, na.rm = TRUE),
violence_desmov = sum(V_Desmovilizados, na.rm = TRUE),
violence_armed = sum(V_GruposArma, na.rm = TRUE),
.groups = 'drop'
)
# Creating a bubble plot
ggplot(df_summary, aes(x = violence_guerrilla, y = violence_para, size = total_violence, color = dep)) +
geom_point(alpha = 0.7, show.legend = TRUE) +
scale_size(range = c(3, 20), name = "Total Violence") +  # Adjust size range as needed
labs(
title = "Distribution of Violence Types by Department",
x = "Violence by Guerrilla",
y = "Violence by Paramilitary",
color = "Department"
) +
theme_minimal() +
theme(legend.position = "right")
df_summary <- df %>%
group_by(dep, periodo) %>%
summarise(
total_violence = sum(Violencia, na.rm = TRUE),
violence_guerrilla = sum(V_Guerrilla, na.rm = TRUE),
violence_para = sum(V_Estado, na.rm = TRUE),  # Note: Ensure this is correct as you have names swapped
violence_estado = sum(V_Paramilitar, na.rm = TRUE),
violence_desmov = sum(V_Desmovilizados, na.rm = TRUE),
violence_armed = sum(V_GruposArma, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_longer(
cols = c(violence_guerrilla, violence_para, violence_estado, violence_desmov, violence_armed),
names_to = "group",
values_to = "incidents"
)
# Creating the bubble plot
ggplot(df_summary, aes(x = periodo, y = group, size = incidents, color = dep)) +
geom_point(alpha = 0.7, show.legend = TRUE) +
scale_size(range = c(3, 20), name = "Incidents of Violence") +  # Adjust size range as needed
labs(
title = "Violence Incidents by Group Over Time",
x = "Period",
y = "Perpetrator Group",
color = "Department"
) +
theme_minimal() +
theme(legend.position = "right")
# Creating the bubble plot
ggplot(df_summary, aes(x = periodo, y = group, size = incidents, color = dep)) +
geom_point(alpha = 0.7, show.legend = TRUE) +
scale_size(range = c(3, 20), name = "Incidents of Violence") +  # Adjust size range as needed
labs(
title = "Violence Incidents by Group Over Time",
x = "Period",
y = "Perpetrator Group"
) +
theme_minimal() +
theme(legend.position = "right")
df_summary <- df %>%
group_by(dep) %>%
summarise(
total_violence = sum(Violencia, na.rm = TRUE),
violence_guerrilla = sum(V_Guerrilla, na.rm = TRUE),
violence_para = sum(V_Estado, na.rm = TRUE),  # Note: Check if name should be swapped
violence_estado = sum(V_Paramilitar, na.rm = TRUE),
violence_desmov = sum(V_Desmovilizados, na.rm = TRUE),
violence_armed = sum(V_GruposArma, na.rm = TRUE),
.groups = 'drop'
) %>%
pivot_longer(
cols = c(violence_guerrilla, violence_para, violence_estado, violence_desmov, violence_armed),
names_to = "group",
values_to = "incidents"
) %>%
group_by(group) %>%
summarise(total_incidents = sum(incidents), .groups = 'drop')
# Creating the bubble plot
ggplot(df_summary, aes(x = group, y = total_incidents, size = total_incidents)) +
geom_point(alpha = 0.7) +
scale_size(range = c(3, 20), name = "Total Incidents of Violence") +  # Adjust size range as needed
labs(
title = "Cumulative Violence Incidents by Group",
x = "Perpetrator Group",
y = "Total Incidents"
) +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
rm(list = ls())
# ---------------------------------------------------------------------------- #
# Load Necessary Libraries
# ---------------------------------------------------------------------------- #
library(tidyverse)  # Essentials
library(readxl)     # For reading Excel files
library(openxlsx)   # For exporting Excel files
library(haven)      # For Stata files
library(sf)         # For spatial data
library(scales)
# ---------------------------------------------------------------------------- #
# Data Import: Spatial Data
# ---------------------------------------------------------------------------- #
zip_file_path <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Municipios.zip"
extraction_directory <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Extracted"
# Corrected argument name
unzip(zip_file_path, exdir = extraction_directory)
# Adjust the path to where you've extracted the .shp file
shapefile_path <- paste0(extraction_directory, "/Servicios_P%C3%BAblicos_-_Municipios.shp")
# Read the shapefile
mun <- st_read(shapefile_path)
mun <- mun %>%
mutate(
# Ensure the department code is treated as a two-digit string
DPTO_CCDGO = sprintf("%02d", as.numeric(DPTO_CCDGO)),
# Ensure the municipality code is treated as a three-digit string
MPIO_CCDGO = sprintf("%03d", as.numeric(MPIO_CCDGO)),
# Concatenate the formatted strings to create the new ID
id = paste0(DPTO_CCDGO, MPIO_CCDGO)
)
# ---------------------------------------------------------------------------- #
# Data Import: Stata Data
# ---------------------------------------------------------------------------- #
df <- read_dta("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/2:_ProcessedData/MergedData/Final/Panel_v3.dta")
df <- df %>%
mutate(
id = sprintf("%05d", as.numeric(id))
)
# ---------------------------------------------------------------------------- #
# Data Map: Violence Across Municipalities
# ---------------------------------------------------------------------------- #
# Data preparation remains the same
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Add a small constant to total_violence to avoid log of zero
merged_data$total_violence <- merged_data$total_violence + 1
# Updated plotting code with adjustments
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradient(low = "pink", high = "red4", na.value = "lightgrey",
name = "Índice de Violencia",
limits = c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE)),
trans = "log") +  # Using log transformation safely now
labs(title = "Violencia a Nivel Municipal",
subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
ggsave("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/4:_Output/Figures/Viol_Mun.pdf", plot = violence_plot, width = 10, height = 8, dpi = 300)
print(violence_plot)
# Updated plotting code with adjustments
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradient(low = "pink", high = "red4", na.value = "lightgrey",
name = "Índice de Violencia",
limits = c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE)),
trans = "log") +  # Using log transformation safely now
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
ggsave("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/4:_Output/Figures/Viol_Mun.pdf", plot = violence_plot, width = 10, height = 8, dpi = 300)
breaks <- quantile(merged_data$total_violence, probs = c(0.33, 0.67, 1), na.rm = TRUE)
labels <- c("Bajo", "Medio", "Alto")
# Updated plotting code with adjusted legend labels
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "deepskyblue", "red4"),
breaks = breaks, labels = labels,
name = "Índice de Violencia") +
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
# Assuming 'df' and 'mun' are correctly prepared and 'mun' is an sf object
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Add a small constant to total_violence to avoid log of zero
merged_data$total_violence <- merged_data$total_violence + 1
# Define custom labels for the gradient
custom_labels <- c("Low", "Medium", "High")
# Updated plotting code with adjusted legend labels
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradient(low = "pink", high = "red4", na.value = "lightgrey",
name = "Índice de Violencia",
labels = custom_labels,  # Apply custom labels
limits = c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE)),
trans = "log") +  # Using log transformation safely now
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
rm(list = ls())
# ---------------------------------------------------------------------------- #
# Load Necessary Libraries
# ---------------------------------------------------------------------------- #
library(tidyverse)  # Essentials
library(readxl)     # For reading Excel files
library(openxlsx)   # For exporting Excel files
library(haven)      # For Stata files
library(sf)         # For spatial data
library(scales)
# ---------------------------------------------------------------------------- #
# Data Import: Spatial Data
# ---------------------------------------------------------------------------- #
zip_file_path <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Municipios.zip"
extraction_directory <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Extracted"
# Corrected argument name
unzip(zip_file_path, exdir = extraction_directory)
# Adjust the path to where you've extracted the .shp file
shapefile_path <- paste0(extraction_directory, "/Servicios_P%C3%BAblicos_-_Municipios.shp")
# Read the shapefile
mun <- st_read(shapefile_path)
mun <- mun %>%
mutate(
# Ensure the department code is treated as a two-digit string
DPTO_CCDGO = sprintf("%02d", as.numeric(DPTO_CCDGO)),
# Ensure the municipality code is treated as a three-digit string
MPIO_CCDGO = sprintf("%03d", as.numeric(MPIO_CCDGO)),
# Concatenate the formatted strings to create the new ID
id = paste0(DPTO_CCDGO, MPIO_CCDGO)
)
# ---------------------------------------------------------------------------- #
# Data Import: Stata Data
# ---------------------------------------------------------------------------- #
df <- read_dta("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/2:_ProcessedData/MergedData/Final/Panel_v3.dta")
df <- df %>%
mutate(
id = sprintf("%05d", as.numeric(id))
)
# ---------------------------------------------------------------------------- #
# Data Map: Violence Across Municipalities
# ---------------------------------------------------------------------------- #
# Data preparation remains the same
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Add a small constant to total_violence to avoid log of zero
merged_data$total_violence <- merged_data$total_violence + 1
# Updated plotting code with adjustments
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradient(low = "pink", high = "red4", na.value = "lightgrey",
name = "Índice de Violencia",
limits = c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE)),
trans = "log") +  # Using log transformation safely now
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
ggsave("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/4:_Output/Figures/Viol_Mun.pdf", plot = violence_plot, width = 10, height = 8, dpi = 300)
# Assuming 'df' and 'mun' are correctly prepared and 'mun' is an sf object
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Add a small constant to total_violence to avoid log of zero
merged_data$total_violence <- merged_data$total_violence + 1
# Define custom labels for the gradient
custom_labels <- c("Low", "Medium", "High")
# Updated plotting code with adjusted legend labels
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradient(low = "pink", high = "red4", na.value = "lightgrey",
name = "Índice de Violencia",
labels = custom_labels,  # Apply custom labels
limits = c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE)),
trans = "log") +  # Using log transformation safely now
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
# Assuming 'df' and 'mun' are correctly prepared and 'mun' is an sf object
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Adding a small constant to total_violence to ensure no zero values for log transformation
merged_data$total_violence <- merged_data$total_violence + 1
# Define breaks and corresponding labels for the color scale
breaks <- quantile(merged_data$total_violence, probs = c(0, 0.5, 1), na.rm = TRUE)
labels <- c("Low", "Medium", "High")
# Plotting code with scale_fill_gradientn for better control over color gradients
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "deepskyblue", "red4"),
breaks = breaks, labels = labels,
name = "Índice de Violencia",
limits = range(merged_data$total_violence),
trans = "log") +  # Log transformation
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
# Assuming 'df' and 'mun' are correctly prepared and 'mun' is an sf object
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Adding a small constant to total_violence to ensure no zero values for log transformation
merged_data$total_violence <- merged_data$total_violence + 1
# Define breaks and corresponding labels for the color scale
breaks <- c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE))
labels <- c("Low", "High")
# Plotting code with scale_fill_gradientn for better control over color gradients
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "red4"),
breaks = breaks, labels = labels,
name = "Índice de Violencia",
limits = range(merged_data$total_violence),
trans = "log") +  # Log transformation
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
# Plotting code with scale_fill_gradientn for better control over color gradients
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "red4", na.value = "lightgrey",
breaks = breaks, labels = labels,
name = "Índice de Violencia",
limits = range(merged_data$total_violence),
trans = "log") +  # Log transformation
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
# Plotting code with scale_fill_gradientn for better control over color gradients
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "red4"),
breaks = breaks, labels = labels,
name = "Índice de Violencia",
limits = range(merged_data$total_violence),
na.value = "lightgrey",  # Correct placement of na.value
trans = "log") +  # Log transformation
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
# Assuming 'df' and 'mun' are correctly prepared and 'mun' is an sf object
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Adding a small constant to total_violence to ensure no zero values for log transformation
merged_data$total_violence <- merged_data$total_violence + 1
# Define breaks and corresponding labels for the color scale
breaks <- c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE))
labels <- c("Bajo", "Alto")
# Plotting code with scale_fill_gradientn for better control over color gradients
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "red4"),
breaks = breaks, labels = labels,
name = "Índice de Violencia",
limits = range(merged_data$total_violence),
na.value = "lightgrey",  # Correct placement of na.value
trans = "log") +  # Log transformation
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
rm(list = ls())
# ---------------------------------------------------------------------------- #
# Load Necessary Libraries
# ---------------------------------------------------------------------------- #
library(tidyverse)  # Essentials
library(readxl)     # For reading Excel files
library(openxlsx)   # For exporting Excel files
library(haven)      # For Stata files
library(sf)         # For spatial data
library(scales)
# ---------------------------------------------------------------------------- #
# Data Import: Spatial Data
# ---------------------------------------------------------------------------- #
zip_file_path <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Municipios.zip"
extraction_directory <- "/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/1:_RawData/Shapefile/Extracted"
# Corrected argument name
unzip(zip_file_path, exdir = extraction_directory)
# Adjust the path to where you've extracted the .shp file
shapefile_path <- paste0(extraction_directory, "/Servicios_P%C3%BAblicos_-_Municipios.shp")
# Read the shapefile
mun <- st_read(shapefile_path)
mun <- mun %>%
mutate(
# Ensure the department code is treated as a two-digit string
DPTO_CCDGO = sprintf("%02d", as.numeric(DPTO_CCDGO)),
# Ensure the municipality code is treated as a three-digit string
MPIO_CCDGO = sprintf("%03d", as.numeric(MPIO_CCDGO)),
# Concatenate the formatted strings to create the new ID
id = paste0(DPTO_CCDGO, MPIO_CCDGO)
)
# ---------------------------------------------------------------------------- #
# Data Import: Stata Data
# ---------------------------------------------------------------------------- #
df <- read_dta("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/2:_ProcessedData/MergedData/Final/Panel_v3.dta")
df <- df %>%
mutate(
id = sprintf("%05d", as.numeric(id))
)
# Assuming 'df' and 'mun' are correctly prepared and 'mun' is an sf object
df_summary <- df %>%
group_by(id) %>%
summarise(total_violence = sum(Violencia, na.rm = TRUE))
merged_data <- mun %>%
left_join(df_summary, by = "id")
# Adding a small constant to total_violence to ensure no zero values for log transformation
merged_data$total_violence <- merged_data$total_violence + 1
# Define breaks and corresponding labels for the color scale
breaks <- c(min(merged_data$total_violence, na.rm = TRUE), max(merged_data$total_violence, na.rm = TRUE))
labels <- c("Bajo", "Alto")
# Plotting code with scale_fill_gradientn for better control over color gradients
violence_plot <- ggplot(data = merged_data) +
geom_sf(aes(fill = total_violence), color = NA) +
scale_fill_gradientn(colors = c("pink", "red4"),
breaks = breaks, labels = labels,
name = "Índice de Violencia",
limits = range(merged_data$total_violence),
na.value = "lightgrey",  # Correct placement of na.value
trans = "log") +  # Log transformation
labs(subtitle = "Pooled (1972-2007)") +
theme_minimal() +
theme(legend.position = "right",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
print(violence_plot)
ggsave("/Users/edmundoarias/Documents/Uniandes/2024-10/HEC/Political-Attitudes/4:_Output/Figures/Viol_Mun.pdf", plot = violence_plot, width = 10, height = 8, dpi = 300)
print(violence_plot)
